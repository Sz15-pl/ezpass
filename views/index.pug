doctype html
html(lang="es")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    meta(name="description", content="Envía archivos fácilmente con esta aplicación web. Tamaño máximo: 20 MB.")
    title Envía archivos fácilmente
    link(rel="stylesheet", href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap")
    link(rel="stylesheet", type="text/css", href="/views/style.css")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.js")
  body
    h1 EzPass
    main
      h3 Tamaño máximo archivo: 20mb
      h2 ID: 
        span#tuid
      br
      input#id(type="text", placeholder="Escribe la ID a enviar")
      br
      input#enviarArchivo(type="file", name="enviarArchivo", accept=)
      br
      button(onclick="mandarArchivo()") Enviar &amp;#x1F680;
      br
      br
      div(id="recibido_Archivo")
    script.
      window.onload = function(){
      alert("El número máximo de envío de archivos es de 5. Una vez gastes el cupo, tendrás que esperar 1 minuto para evitar sobrecargar el servidor. Gracias")
      }
      
      let ID = Math.floor(Math.random()*90000) + 10000;
      const input = document.getElementById('enviarArchivo');
      input.addEventListener('change', (event) => {
      const target = event.target;
      if (target.files && target.files[0]) {
      const maxAllowedSize = 20 * 1024 * 1024; // 20 MB
      if (target.files[0].size > maxAllowedSize) {
      alert('El tamaño del archivo excede el límite de 20 MB.');
      target.value = '';
      }
      }
      });
      
      const socket = io({
      transports: ['websocket'],
      upgrade: false,
      reconnection: true,
      reconnectionDelay: 1000,
      reconnectionDelayMax: 5000,
      reconnectionAttempts: Infinity,
      autoConnect: true,
      maxHttpBufferSize: 1e8,
      });
      
      const id = document.getElementById("tuid");
      socket.on("connect", () => {
      id.innerText = ID;
      socket.on(ID, (mensaje) => {
      console.log(mensaje);
      const downloadButton = document.createElement("button");
      downloadButton.innerText = "Descargar Archivo";
      downloadButton.addEventListener("click", () => {
      const linkSource = mensaje.archivo;
      const downloadLink = document.createElement("a");
      downloadLink.href = linkSource;
      downloadLink.download = mensaje.nombre;
      downloadLink.click();
      });
      const recibidoArchivoDiv = document.getElementById("recibido_Archivo");
      recibidoArchivoDiv.innerHTML = "";
      recibidoArchivoDiv.appendChild(downloadButton);
      });
      });
      
      function mandarArchivo() {
      const ID_ = document.getElementById("id").value;
      const archivoInput = document.getElementById("enviarArchivo");
      if (archivoInput.files.length > 0) {
      const archivo = archivoInput.files[0];
      const reader = new FileReader();
      reader.onload = function () {
      socket.emit("archivo", {
      "id": ID_,
      "n": archivoInput.files[0].name,
      "a": reader.result,
      "token": "#{token}"
      });
      };
      reader.onerror = function (error) {
      console.log('Error: ', error);
      };
      reader.readAsDataURL(archivo);
      }
      }
      
  
